//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TanksGB.GameLogic.Components.TeamComponent team { get { return (TanksGB.GameLogic.Components.TeamComponent)GetComponent(GameComponentsLookup.Team); } }
    public bool hasTeam { get { return HasComponent(GameComponentsLookup.Team); } }

    public void AddTeam(TanksGB.General.LevelDesign.TeamType newTeam) {
        var index = GameComponentsLookup.Team;
        var component = (TanksGB.GameLogic.Components.TeamComponent)CreateComponent(index, typeof(TanksGB.GameLogic.Components.TeamComponent));
        component.Team = newTeam;
        AddComponent(index, component);
    }

    public void ReplaceTeam(TanksGB.General.LevelDesign.TeamType newTeam) {
        var index = GameComponentsLookup.Team;
        var component = (TanksGB.GameLogic.Components.TeamComponent)CreateComponent(index, typeof(TanksGB.GameLogic.Components.TeamComponent));
        component.Team = newTeam;
        ReplaceComponent(index, component);
    }

    public void RemoveTeam() {
        RemoveComponent(GameComponentsLookup.Team);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTeam;

    public static Entitas.IMatcher<GameEntity> Team {
        get {
            if (_matcherTeam == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Team);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTeam = matcher;
            }

            return _matcherTeam;
        }
    }
}
